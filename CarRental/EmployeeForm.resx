<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADE0sX/lreY/6G8o/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADk5eT/u8y8/42vj/9elWP/OIE+/z6PRf9OplT/OohA/+Pj4/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3ODc/7LG
        tf+Dqof/WJJe/ziEQf9FlEz/VKhb/2e/bv950oH/gNaH/4XajP88jUP/4uLi/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvx7H/faeC/1OP
        Wf9Cikn/TJlV/12vZf9vxXf/f9aH/4ndkP+M5JP/iuOS/4HViP9+z4X/f9SG/zuNQf/f39//AAAAAAAA
        AAAAAAAAzc7g/8DC3f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ4lN/1uk
        Zf9mtW7/ecuC/4bZjv+L4ZP/j+mX/4zkk/9/0If/a6pw/1J7Vv89Tz//PEc9/3jHfv960oH/O41C/7u7
        1P+SlND/aGrL/0NJxv9CRs3/P0PM/+Pj4/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABUllz/muij/4bZkP+J4JL/fsuH/2mkb/9PdFP/PUw//zc1N/9DO0H/XVVc/3x3ev9PWE//csV6/3LL
        ef87jUH/OT6//1ld0v9xdeP/hIjq/5OW7f9QVtP/4ODg/wAAAAAAAAAAAAAAAAAAAADa083/1MrA/wAA
        AAAAAAAAAAAAAFWXXv+V5J//gdaL/0xjT/86NTr/Sj9I/2ZeZP+BfX//lJKT/5eVlf+TkZH/fXh7/1Fq
        VP9xyHj/bch1/zyMQv99gNX/kZPm/5SX7P+Nj+v/j5Pr/0tQ0P/c3Nz/08rC/8Gqlv+siWn/n2xF/6Zx
        Q/+ibUD/4+Pj/wAAAAAAAAAAU5Vc/5Pim/970YX/Ul1T/6Kfof+bmZn/i4mK/4OCg/97eXr/eHZ3/3t5
        ev9fWl7/XI5g/23Gdf9rxnP/Oo1B/2pstv9bXI//T09y/4SH3P+Okuv/Sk/Q/41YMf+pc0X/v4ha/9Sc
        bv/lsYL/67yP/655Tv/j4+P/AAAAAAAAAABUll7/kOKY/3fPgP9bdl7/i4iK/5SSk/98env/dnR1/3d1
        dv91c3T/Yl1h/09kUf9ovnD/acRx/2nHcf85jkD/NDMp/1JPRP9DQkP/fX/X/4yP6/9JTdD/05Vn/+m5
        jP/swZP/67+P/+mzh//ptYf/rHdM/+Pj4/8AAAAAAAAAAFSWXv+O4JX/eNGB/1+TZf9kaWX/l5KW/5WT
        lP95d3j/cW9w/2VjZP9PYVH/YKxo/2bCb/9lwG7/ZsVu/zqNQv+EgoL/iIWD/01NZP+AguH/iYvq/0lN
        0f/SmG3/xZZy/5NyVv9xWkf/26d+/+m1h/+sd0v/4+Pj/wAAAAAAAAAAVJZe/4vfkf910X7/cMV5/1WD
        Wf9aZlv/hoSF/4qHif9nZWf/VWNX/16oZv9lxG7/ZMBt/2O/bP9hwmz/OI4//2lnZ/9dW1b/UlKJ/4KE
        6f+Fh+n/R0vR/ywrKv8tMzn/R05V/0NDQ//WoXf/6bKE/612Sv/j4+P/AAAAAAAAAABUll7/h96P/3HN
        ev9zz3v/cs57/1+kZf9efGH/Y2Fj/15ZXf9Tclf/WqBh/2C/af9jwm3/asRy/3HLev8/j0f/YF1b/0tK
        Wf9xcs3/goPp/4OF6f9HSdL/eXd3/5ORkf+Kioz/Y1ZM/9+jeP/proD/rXVJ/+Pj4/8AAAAAAAAAAFWX
        X/+G3o//bcp2/3DMef9vzXf/Z7hu/01iUP9gXmD/ZmVn/1VQVf9OY1D/d71+/4zclP+M2ZT/jdyV/0KP
        Sv9BQUj/W1yn/4GC6f9+f+j/f4Do/0ZK0v9nY2T/dXN1/1pcYP+IZ1D/56t9/+isfv+tdUj/4+Pj/wAA
        AAAAAAAAVJZe/4Hbif9nx3D/a8pz/23Jdv9Wdln/c21y/4F/f/+CgYD/bmpt/1dXV/9vo3T/j+GX/4rY
        kf+K25L/Q49K/01Ol/95euL/fn/o/31+6P9+f+j/REjT/2NhYf9oaGr/XFJN/9CSZ//oqnz/6Kl7/610
        SP/j4+P/AAAAAAAAAABWll//jeCV/4DWi/+N35j/gsKK/2dsaP+alpj/goCB/4GAf/+Fg4T/Z2Jl/2GK
        Zf+R5Zr/itmR/4vbkv9DkEr/WFq//3Z34v96e+j/e3zo/4CB6f9ITNP/WVlZ/1FNSv+velX/6ad5/+el
        d//np3f/rXRH/+Pj4/8AAAAAAAAAAFmZZP+l7bD/k9+e/5TmoP9xp3j/ioeJ/5mYl/+Ihob/i4mJ/5KQ
        kf9xbG//ZZJq/5Djmf+K2ZP/i9uS/0SRS/9BQGf/dnjO/4+Q6/+Tlez/l5nt/1JU0/9MR0f/pXRU/+in
        dv/npHf/56R2/+ekdv+uckX/4+Pj/wAAAAAAAAAAWppk/6Htrf+Q35z/leuj/2macf+KhYj/nJqb/5aU
        lP+bmZn/oJ6f/3Jzcv9zrXr/j96Y/4zalP+N3ZT/RJJN/0RDRf9xcqr/mpvt/5SU7P+Vl+3/UVTV/3BP
        Pf/PkGT/56J0/+agcf/moXP/56d4/651Sf/j4+P/AAAAAAAAAABbmmT/ouyu/5HfnP+W6aP/c6x7/4OF
        g/+4tLb/qKem/6upqf+inaD/bH1u/4bPj/+N3Jf/jNuV/43dlv9Ek0//WFZT/1xci/+bnO3/lJXs/5WW
        7f9TVdT/QkJD/3FXR//TnXX/6rSJ/+u2jP/svpT/r3pR/+Pj4/8AAAAAAAAAAFuaZf+i7q//keCd/5Tm
        of+AxIz/d4h5/6qlqP/Jx8n/q6qq/3Z9d/96r4H/j92Z/43cl/+N25b/i9yU/0STT/9jYlv/V1eK/5uc
        7f+Uluz/lpfu/1RV1P9SUlb/TkxN/6+Ocv/sv5T/67iP/+y7kv+vek//4+Pj/wAAAAAAAAAAW5pl/6Pt
        r/+R4J3/k+Kg/5Hgnf95rID/dYh3/1xeXP9IUUr/baF0/4vblv+N3Jf/j96Z/5XjoP+g76r/S5ZV/2Zl
        Zf9oaKn/mZrt/5WW7P+Wl+7/VFbU/2loaP9fYGL/kHJd/+zAlP/suZD/7LuT/7B7UP/j4+P/AAAAAAAA
        AABbm2b/o+2w/5Lgnv+T4Z//k+Kf/5DfnP97vYX/f8GI/5Pinv+e7ar/o++u/6nvsv+o7bH/l9ef/328
        hv9FjE7/YF5s/39/zv+Yme3/lpfs/5eY7/9WV9X/dXN0/2hrb/+Ob1j/7L+U/+y6kf/svJT/sHtR/+Pj
        4/8AAAAAAAAAAFuaZ/+i7rD/j+Cc/5PioP+W5aP/nuyr/6vwtv+w8bn/qO2z/5LUnf94t4L/W51m/0iL
        Uv9YkGH/cpl3/2t/av9bWpD/k5Pl/5iZ7f+XmO3/l5jv/1dY1P+AgID/cXBy/7GFZP/tvpT/7LmS/+y8
        lP+we1H/4+Pj/wAAAAAAAAAAW5tn/6vwtv+r8Lf/sPG6/6Tqr/+N0pn/crZ9/1qdZf9Hi1X/VId1/2GC
        mf9dbYv/bW16/29vbv9JSUj/VlaD/4SE3P+Xl+v/lZbs/5eY7f+bnO//XV7W/4yMjf94cGr/2aR6/+y7
        lP/suZL/7LyU/7B7Uv/j4+P/AAAAAAAAAABXmmP/iNCV/22zev9VmmH/Uo9d/3Slfv9ZdZP/gIvE/4OB
        2P+DgtX/i4nb/4yL2f9xcLT/Y2Kb/4GAxP+Zmer/oKDv/6en7/+rq/D/rK3w/6Sk7P9ZWtH/bW9v/6KA
        Zv/uuY//7LqU/+y6lP/svJT/sHtS/+Pj4/8AAAAAAAAAAGKdbv+Fr43/ssy4/wAAAAAAAAAAAAAAAHFu
        x/+ioOX/mpnp/56d7f+ene3/np3t/6in7/+wr/H/s7Hx/6+u8P+kouj/jo7e/3V11P9hYcz/VFS7/0VG
        lv9+YUv/6q+A/+y7lP/suZL/7LqT/+3AmP+xf1X/5eXl/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfXrU/6yq7/+opu//rqzw/7Ox8f+wr/H/n57o/4mJ3v90cdb/Xl3P/3BjwP+Rc6b/r4OM/6F1
        Yv+LZkr/u4pp/+eyjP/tv5r/78Sh/+/Ip//xyKf/5r2c/6p5VP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB7edX/rqzy/5yZ6P+GhN//cnDX/2Fd0P99fNj/fmaW/8KYnP/Yn4D/0p16/9il
        gv/fr4v/68Ke//DOqv/wzKv/8cep/+G3lv/Mn33/t4hk/6Z1Tv+nfl3/wKCJ/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGVi1P9qZ9T/iobb/7Ox5v8AAAAAAAAAAAAAAACddFf/2LCS/+S3
        lf/txqb/8Mus/+/Hqv/etJX/yZx9/7WGYv+kdE7/rYVm/8OolP/f0MT/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCG
        af/rxKb/2rCS/8aZef+yg2L/o3RS/7KOc//KsqD/5NjP/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApHZV/6d6W/+3ln7/076u/+rg2v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////H///4A///gAP//AADn/gAAA/4AAAPOAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGOAAAB/gAAA/4AAAP+HAAf//wB///8H/8=
</value>
  </data>
</root>